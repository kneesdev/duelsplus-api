// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String       @id @default(uuid())
  discordId     String       @unique
  username      String?
  hypixelApiKey String?
  autoGGMessage String?
  createdAt     DateTime     @default(now())
  settings      Settings?
  isBanned      Boolean      @default(false)
  igns          IgnHistory[]
  sessions      Session[]
  stats         Stat[]
}

model Session {
  id        String    @id @default(uuid())
  userId    String
  startedAt DateTime
  endedAt   DateTime?

  user User @relation(fields: [userId], references: [id])
}

model Settings {
  id           String  @id @default(uuid())
  userId       String  @unique
  pearlTimer   Boolean @default(false)
  autoDodge    Boolean @default(false)
  autoStats    Boolean @default(false)
  qProtection  Boolean @default(false)
  dodgeRequeue Boolean @default(false)
  user         User    @relation(fields: [userId], references: [id])
}

model IgnHistory {
  id       String   @id @default(uuid())
  ign      String
  loggedAt DateTime @default(now())
  user     User     @relation(fields: [userId], references: [id])
  userId   String
}

model Stat {
  id        String   @id @default(uuid())
  userId    String
  type      String // "daily", "weekly", "session"
  data      Json
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}

model Report {
  id         String   @id @default(uuid())
  reportedId String // discordId
  reporterId String? // discordId
  reason     String?
  status     String   @default("pending")
  createdAt  DateTime @default(now())
}

model ProxyChatMessage {
  id        String   @id @default(uuid())
  authorId  String
  content   String
  createdAt DateTime @default(now())
}
